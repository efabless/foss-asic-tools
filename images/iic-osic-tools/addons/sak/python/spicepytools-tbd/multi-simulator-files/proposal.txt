Proposal to add support for multiple simulators

I propose to extend the tests performed by spicelib to test every
model with any number of simulators. Here are the details:

    * All user-configurable settings will be stored in spicelibconf.py . These
      will include both the plotting backend and which simulators to
      use

    * testlibrary.py will have to include code for simulating every
      modelPart child class on every simulator, but the code should
      work for multiple versions of the same simulator

    * Version numbers will be extracted from the simulator automatically and displayed in the results file

    * Gnucap and NGspice will be the first simulators targeted, but
      testlibrary should be well abstracted so other simulators can be
      easily added, eg Qucs

    * The per-section html reports (eg
      model_tests/adi/opamps/index.html) shall automatically create
      columns for every simulator tested

    * The columns shall display the version number of the simulator used

    * Every part, simulator pair has its own test result and test status

    * The model_status lines in indexfiles shall be changed:

    * If model_status_undefined is defined for a part, then that
      part’s status will be ‘undefined’ for all simulators and the
      tests will not be run. In this case, model_status_good and
      model_status_broken will be ignored

          o model_status_good will contain a space separated list of
            simulator_version identifiers under which the model has
            tested good

          o model_status_broken will contain a space separated list of
            simulator_version identifiers under which the model has
            tested bad

          o if a simulator_version identifier is mentioned in neither
            model_status_good nor model_status_broken, the part’s status
            will be “test” for that simulator_version

          o It is an error for the same simulator_version identifier
            to be present in both model_status_good and model_status_broken
